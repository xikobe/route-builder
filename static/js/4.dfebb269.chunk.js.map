{"version":3,"sources":["components/waypoint-list/waypoint-item/styles.js","components/waypoint-list/waypoint-item/index.js","components/waypoint-list/save-button/styles.js","components/waypoint-list/save-button/index.js","shared/utils/markers.js","components/waypoint-list/styles.js","components/waypoint-list/index.js"],"names":["ListItem","styled","li","theme","colors","gray","green","CopyWrapper","div","DragHandle","sortableHandle","Icon","name","memo","children","waypoint","removeWaypoint","title","Box","mr","data-test-id","IconButton","variantColor","onClick","icon","SaveButtonWrapper","SaveButton","markers","useGMapContext","Button","disabled","length","size","width","rawMarkers","map","marker","latitude","getPosition","lat","longitude","lng","parseMarkers","startTime","Date","now","markerFile","createGPX","activityName","uriContent","encodeURIComponent","link","document","createElement","href","download","click","downloadGPXFile","ListWrapper","List","ul","SortableItem","SortableElement","indexKey","SortableList","SortableContainer","index","key","id","WaypointList","reOrderMarkers","Heading","as","color","onSortEnd","oldIndex","newIndex"],"mappings":"mkBAGO,IAAMA,EAAWC,IAAOC,GAAV,IAIRC,IAAMC,OAAOC,KAAK,KAEAF,IAAMC,OAAOE,MAAM,MAGrCC,EAAcN,IAAOO,IAAV,KCPlBC,EAAaC,aAAe,kBAAM,kBAACC,EAAA,EAAD,CAAMC,KAAK,mBAyBpCC,kBAvBa,SAAC,GAAkD,EAAhDC,SAAiD,IAAvCC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,eAAgBC,EAAY,EAAZA,MAK/D,OACI,kBAACjB,EAAD,KACI,kBAACO,EAAD,KACI,kBAACW,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACV,EAAD,OAEJ,uBAAGW,eAAa,kBAAkBH,IAEtC,kBAACI,EAAA,EAAD,CACID,eAAa,sBACbE,aAAa,OACbC,QAfgB,WACxBP,EAAeD,IAePS,KAAK,e,2HCtBd,IAAMC,EAAoBxB,IAAOO,IAAV,K,kBC0BfkB,EAtBI,WAAO,IACdC,EAAYC,cAAZD,QAMR,OACI,kBAACF,EAAD,KACI,kBAACI,EAAA,EAAD,CACIC,UAAWH,EAAQI,OACnBX,eAAa,iBACbE,aAAa,OACbU,KAAK,KACLC,MAAM,OACNV,QAZI,YCAW,SAACW,GAC5B,IAAMP,EARkB,SAAAA,GACxB,OAAOA,EAAQQ,KAAI,SAAAC,GAAM,MAAK,CAC1BC,SAAUD,EAAOE,cAAcC,MAC/BC,UAAWJ,EAAOE,cAAcG,UAKpBC,CAAaR,GAGvBS,EAAYC,KAAKC,MAEjBC,EAAaC,IAAUpB,EAAS,CACpCqB,aAJmB,UAKnBL,cAGIM,EAAa,4BAA8BC,mBAAmBJ,GAC9DK,EAAOC,SAASC,cAAc,KACpCF,EAAKG,KAAOL,EACZE,EAAKI,SAAW,YAChBJ,EAAKK,QDdDC,CAAgB9B,KAKZ,U,iYEZL,IAAM+B,EAAczD,IAAOO,IAAV,IAIAL,IAAMC,OAAOC,KAAK,MAK7BsD,EAAO1D,IAAO2D,GAAV,K,SCZjB,6CAQA,IAAMC,EAAeC,aAAgB,gBAAGC,EAAH,EAAGA,SAAU3B,EAAb,EAAaA,OAAQpB,EAArB,EAAqBA,eAArB,OACjC,kBAAC,EAAD,CACIC,MAAK,mBAAc8C,EAAW,GAC9B/C,eAAgBA,EAChBD,SAAUqB,OAIL4B,EAAeC,aAAkB,gBAAGtC,EAAH,EAAGA,QAASX,EAAZ,EAAYA,eAAZ,OAC1C,kBAAC2C,EAAD,KACKhC,EAAQQ,KAAI,SAACC,EAAQ8B,GAAT,OACT,kBAACL,EAAD,CACIM,IAAK/B,EAAOgC,GACZF,MAAOA,EACPH,SAAUG,EACV9B,OAAQA,EACRpB,eAAgBA,WAwBjBqD,UAlBM,WAAO,IAAD,EAC6BzC,cAA5CD,EADe,EACfA,QAASX,EADM,EACNA,eAAgBsD,EADV,EACUA,eAMjC,OACI,kBAACZ,EAAD,KACI,kBAACa,EAAA,EAAD,CAASC,GAAG,KAAKxC,KAAK,KAAKyC,MAAM,SAAjC,qBAGA,kBAACT,EAAD,CAAcU,UATJ,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC3BN,EAAe3C,EAAS,CAAEgD,WAAUC,cAQIjD,QAASA,EAASX,eAAgBA,IACtE,kBAAC,EAAD","file":"static/js/4.dfebb269.chunk.js","sourcesContent":["import styled from '@emotion/styled';\nimport { theme } from '@chakra-ui/core';\n\nexport const ListItem = styled.li`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    color: ${theme.colors.gray[300]};\n    padding: 10px;\n    border-bottom: 1px solid ${theme.colors.green[900]};\n`;\n\nexport const CopyWrapper = styled.div`\n    display: flex;\n    flex-flow: row wrap;\n    align-items: center;\n`;\n","import React, { memo } from 'react';\nimport { IconButton, Icon, Box } from '@chakra-ui/core';\nimport { sortableHandle } from 'react-sortable-hoc';\nimport { ListItem, CopyWrapper } from './styles';\n\nconst DragHandle = sortableHandle(() => <Icon name=\"drag-handle\" />);\n\nexport const WaypointItem = ({ children, waypoint, removeWaypoint, title }) => {\n    const handleOnDeleteClick = () => {\n        removeWaypoint(waypoint);\n    };\n\n    return (\n        <ListItem>\n            <CopyWrapper>\n                <Box mr={2}>\n                    <DragHandle />\n                </Box>\n                <p data-test-id=\"waypoint-title\">{title}</p>\n            </CopyWrapper>\n            <IconButton\n                data-test-id=\"waypoint-remove-btn\"\n                variantColor=\"teal\"\n                onClick={handleOnDeleteClick}\n                icon=\"delete\"\n            />\n        </ListItem>\n    );\n};\n\nexport default memo(WaypointItem);\n","import styled from '@emotion/styled';\n\nexport const SaveButtonWrapper = styled.div`\n    display: flex;\n    margin-top: auto;\n`;\n","import React from 'react';\nimport { Button } from '@chakra-ui/core';\nimport { SaveButtonWrapper } from './styles';\nimport { useGMapContext } from '../../../shared/contexts/GMapContext';\nimport { downloadGPXFile } from '../../../shared/utils/markers';\n\nconst SaveButton = () => {\n    const { markers } = useGMapContext();\n\n    const saveGPX = () => {\n        downloadGPXFile(markers);\n    };\n\n    return (\n        <SaveButtonWrapper>\n            <Button\n                disabled={!markers.length}\n                data-test-id=\"save-route-btn\"\n                variantColor=\"teal\"\n                size=\"lg\"\n                width=\"100%\"\n                onClick={saveGPX}>\n                Save\n            </Button>\n        </SaveButtonWrapper>\n    );\n};\n\nexport default SaveButton;\n","import createGPX from 'gps-to-gpx';\n\nexport const parseMarkers = markers => {\n    return markers.map(marker => ({\n        latitude: marker.getPosition().lat(),\n        longitude: marker.getPosition().lng(),\n    }));\n};\n\nexport const downloadGPXFile = (rawMarkers) => {\n    const markers = parseMarkers(rawMarkers);\n\n    const activityName = 'running';\n    const startTime = Date.now();\n\n    const markerFile = createGPX(markers, {\n      activityName,\n      startTime,\n    });\n\n    const uriContent = \"data:application/gpx+xml,\" + encodeURIComponent(markerFile);\n    const link = document.createElement('a');\n    link.href = uriContent;\n    link.download = 'route.gpx';\n    link.click();\n}\n","import styled from '@emotion/styled';\nimport { theme } from '@chakra-ui/core';\n\nexport const ListWrapper = styled.div`\n    flex: 0 1 auto;\n    min-width: 300px;\n    padding: 15px 15px 30px;\n    background-color: ${theme.colors.gray[800]};\n    display: flex;\n    flex-flow: column;\n`;\n\nexport const List = styled.ul`\n    list-style: none;\n    margin-bottom: 20px;\n    max-height: 100%;\n    overflow-y: scroll;\n`;\n","import React from 'react';\nimport { useGMapContext } from '../../shared/contexts/GMapContext';\nimport WaypointItem from './waypoint-item';\nimport SaveButton from './save-button';\nimport { ListWrapper, List } from './styles';\nimport { Heading } from '@chakra-ui/core';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\n\nconst SortableItem = SortableElement(({ indexKey, marker, removeWaypoint }) => (\n    <WaypointItem\n        title={`waypoint ${indexKey + 1}`}\n        removeWaypoint={removeWaypoint}\n        waypoint={marker}\n    />\n));\n\nexport const SortableList = SortableContainer(({ markers, removeWaypoint }) => (\n    <List>\n        {markers.map((marker, index) => (\n            <SortableItem\n                key={marker.id}\n                index={index}\n                indexKey={index}\n                marker={marker}\n                removeWaypoint={removeWaypoint}\n            />\n        ))}\n    </List>\n));\n\nconst WaypointList = () => {\n    const { markers, removeWaypoint, reOrderMarkers } = useGMapContext();\n\n    const onSortEnd = ({ oldIndex, newIndex }) => {\n        reOrderMarkers(markers, { oldIndex, newIndex });\n    };\n\n    return (\n        <ListWrapper>\n            <Heading as=\"h1\" size=\"md\" color=\"white\">\n                Create Your route\n            </Heading>\n            <SortableList onSortEnd={onSortEnd} markers={markers} removeWaypoint={removeWaypoint} />\n            <SaveButton />\n        </ListWrapper>\n    );\n};\n\nexport default WaypointList;\n"],"sourceRoot":""}