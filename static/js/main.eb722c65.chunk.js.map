{"version":3,"sources":["shared/hooks/useScript.js","shared/hooks/useMap.js","shared/contexts/GMapContext.js","shared/utils/map.js","components/map/index.js","shared/hooks/usePrev.js","components/map-painter/index.js","components/app/styles.js","components/app/App.js","index.js"],"names":["cachedScripts","useMap","isloaded","useState","map","setMap","src","loaded","error","state","setState","useEffect","includes","push","script","document","createElement","async","onScriptLoad","onScriptError","index","indexOf","splice","remove","addEventListener","body","appendChild","removeEventListener","useScript","process","gmap","createMap","GMapContext","createContext","useGMapContext","useContext","GMapProvider","children","markers","setMarkers","addListener","latLng","createMarker","Provider","value","removeWaypoint","waypointToRemove","filter","marker","clearWaypoint","reOrderMarkers","oldIndex","newIndex","arrayMove","window","google","maps","Map","getElementById","zoom","center","lat","lng","createLine","coords","Polyline","path","geodesic","strokeColor","strokeOpacity","strokeWeight","position","Marker","id","uniqid","drawLine","lineToRemove","line","clearLine","drawMarkers","waypoints","forEach","waypoint","setLabel","MapWrapper","styled","div","GMap","usePrev","ref","useRef","current","MapPainter","setLine","prevLine","Wrapper","LazyWaypointList","React","lazy","App","fallback","ReactDOM","render","ThemeProvider","CSSReset"],"mappings":"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","file":"static/js/main.eb722c65.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\n/* downloaded here https://usehooks.com/useScript/ */\n\nlet cachedScripts = [];\nexport default function useScript(src) {\n    // Keeping track of script loaded and error state\n    const [state, setState] = useState({\n        loaded: false,\n        error: false,\n    });\n\n    useEffect(\n        () => {\n            // If cachedScripts array already includes src that means another instance ...\n            // ... of this hook already loaded this script, so no need to load again.\n            if (cachedScripts.includes(src)) {\n                setState({\n                    loaded: true,\n                    error: false,\n                });\n            } else {\n                cachedScripts.push(src);\n\n                // Create script\n                let script = document.createElement('script');\n                script.src = src;\n                script.async = true;\n\n                // Script event listener callbacks for load and error\n                const onScriptLoad = () => {\n                    setState({\n                        loaded: true,\n                        error: false,\n                    });\n                };\n\n                const onScriptError = () => {\n                    // Remove from cachedScripts we can try loading again\n                    const index = cachedScripts.indexOf(src);\n                    if (index >= 0) cachedScripts.splice(index, 1);\n                    script.remove();\n\n                    setState({\n                        loaded: true,\n                        error: true,\n                    });\n                };\n\n                script.addEventListener('load', onScriptLoad);\n                script.addEventListener('error', onScriptError);\n\n                // Add script to document body\n                document.body.appendChild(script);\n\n                // Remove event listeners on cleanup\n                return () => {\n                    script.removeEventListener('load', onScriptLoad);\n                    script.removeEventListener('error', onScriptError);\n                };\n            }\n        },\n        [src] // Only re-run effect if script src changes\n    );\n\n    return [state.loaded, state.error];\n}\n","import { useState, useEffect } from 'react';\nimport { createMap } from '../utils/map';\nimport useScript from '../hooks/useScript';\n\nconst useMap = isloaded => {\n    const [map, setMap] = useState(null);\n    const [loaded] = useScript(\n        `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_MAP_KEY}`\n    );\n\n    useEffect(() => {\n        if (!map && loaded) {\n            const gmap = createMap();\n\n            setMap(gmap);\n        }\n    }, [map, loaded]);\n\n    return { map };\n};\n\nexport default useMap;\n","import React, { useEffect, createContext, useState, useContext } from 'react';\nimport useMap from '../hooks/useMap';\nimport { clearWaypoint, createMarker } from '../utils/map';\nimport arrayMove from 'array-move';\n\nconst GMapContext = createContext();\n\nexport const useGMapContext = () => useContext(GMapContext);\n\nconst GMapProvider = ({ children }) => {\n    const { map } = useMap();\n    const [markers, setMarkers] = useState([]);\n\n    useEffect(() => {\n        map &&\n            map.addListener('click', ({ latLng }) => {\n                setMarkers(markers => [...markers, createMarker(latLng)]);\n            });\n    }, [map]);\n\n    function removeWaypoint(waypointToRemove) {\n        setMarkers(markers => markers.filter(marker => marker !== waypointToRemove));\n        clearWaypoint(waypointToRemove);\n    }\n\n    function reOrderMarkers(markers, { oldIndex, newIndex }) {\n        setMarkers(arrayMove(markers, oldIndex, newIndex));\n    }\n\n    return (\n        <GMapContext.Provider value={{ map, markers, removeWaypoint, reOrderMarkers }}>\n            {children}\n        </GMapContext.Provider>\n    );\n};\n\nexport { GMapProvider, GMapContext };\n","import uniqid from 'uniqid';\n\nexport const createMap = () => {\n    return new window.google.maps.Map(document.getElementById('map'), {\n        zoom: 12,\n        center: { lat: 37.77493, lng: -122.41942 },\n    });\n};\n\nexport const createLine = coords => {\n    return new window.google.maps.Polyline({\n        path: coords,\n        geodesic: true,\n        strokeColor: '#FF0000',\n        strokeOpacity: 1.0,\n        strokeWeight: 2,\n    });\n};\n\nexport const createMarker = position =>\n    new window.google.maps.Marker({\n        position,\n        id: uniqid(),\n    });\n\nexport const drawLine = (map, [lineToRemove, line]) => {\n    lineToRemove && clearLine(lineToRemove);\n    line.setMap(map);\n};\n\nexport const drawMarkers = (map, waypoints) => {\n    waypoints.forEach((waypoint, index) => {\n        waypoint.setLabel(`${index + 1}`);\n        waypoint.setMap(map);\n    });\n};\n\nexport const clearWaypoint = waypointToRemove => {\n    waypointToRemove.setMap(null);\n};\n\nexport const clearLine = lineToRemove => {\n    lineToRemove.setMap(null);\n};\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst MapWrapper = styled.div`\n    height: 100%;\n    width: 100%;\n`;\n\nexport default function GMap() {\n    return <MapWrapper id=\"map\" />;\n}\n","import { useEffect, useRef } from 'react';\n\n/* downloaded here https://usehooks.com/usePrevious/ */\n\nconst usePrev = value => {\n    const ref = useRef();\n\n    useEffect(() => {\n        ref.current = value;\n    }, [value]); // Only re-run if value changes\n\n    return ref.current;\n};\n\nexport default usePrev;\n","import { useEffect, useState } from 'react';\nimport { drawMarkers, drawLine, createLine } from '../../shared/utils/map';\nimport usePrev from '../../shared/hooks/usePrev';\nimport { useGMapContext } from '../../shared/contexts/GMapContext';\n\nconst MapPainter = ({ children }) => {\n    const { map, markers } = useGMapContext();\n    const [line, setLine] = useState(null);\n    const prevLine = usePrev(line);\n\n    useEffect(() => {\n        if (map) {\n            drawMarkers(map, markers);\n            setLine(line => createLine(markers.map(marker => marker.position)));\n        }\n    }, [map, markers]);\n\n    useEffect(() => {\n        if (map && line) {\n            drawLine(map, [prevLine, line]);\n        }\n    }, [line, map, prevLine]);\n\n    return children;\n};\n\nexport default MapPainter;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-content: stretch;\n    height: 100vh;\n`;\n\nexport const MapWrapper = styled.div`\n    flex: 1 1 auto;\n`;\n","import React, { Suspense } from 'react';\nimport Gmap from '../map';\nimport { GMapProvider } from '../../shared/contexts/GMapContext';\nimport MapPainter from '../map-painter';\nimport { Wrapper, MapWrapper } from './styles';\n\nconst LazyWaypointList = React.lazy(() => import('../waypoint-list'));\n\nconst App = () => (\n    <GMapProvider>\n        <MapPainter>\n            <Wrapper>\n                <Suspense fallback={null}>\n                    <LazyWaypointList />\n                </Suspense>\n                <MapWrapper>\n                    <Gmap />\n                </MapWrapper>\n            </Wrapper>\n        </MapPainter>\n    </GMapProvider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport { ThemeProvider, CSSReset } from '@chakra-ui/core';\n\nReactDOM.render(\n    <ThemeProvider>\n        <CSSReset />\n        <App />\n    </ThemeProvider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}